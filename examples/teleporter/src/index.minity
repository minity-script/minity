namespace teleporter
import "./throwables"

tag teleporter



for @a throwables:give_throwable(slime_ball,"{.teleporter}","Throwable Teleporter")

function teleporter #throwables:dropped  {
  var $at_pos
  tag teleport_now
  if (@s.teleporter) {
    if (@s::Item.tag.OldPosition) {
      @@OldPosition = @s::Item.tag.OldPosition
      @@OldRotation = @s::Item.tag.OldRotation
      $at_pos = @s::Item.tag.CurrentState
      if ($at_pos == 1) {
        @s::Item.tag.CurrentState = 2b
      } else {
        @s::Item.tag.CurrentState = 1b
      }
      tag @s teleport_now
      when throwables:find_owner then {
        @@CurrentPosition = @s::Pos
        @@CurrentRotation = @s::Rotation
        tag @s teleport_now
        at @s summon marker then {
          @s::Pos = @@OldPosition
          @s::Rotation = @@OldRotation
          /tp {@e.teleport_now} @s
          /kill @s
        }
        /title @s title ""
        /title @s subtitle {=<t>Teleport position {$at_pos}</t>}
      }
      untag @e.teleport_now teleport_now
      @s::Item.tag.OldPosition = @@CurrentPosition
      @s::Item.tag.OldRotation = @@CurrentRotation
    } else {
      when throwables:find_owner then {
        /title @s title ""
        /title @s subtitle "Teleport position 1 marked"
        @@OldPosition = @s::Pos
        @@OldRotation = @s::Rotation
      }
      @s::Item.tag.CurrentState = 1b
      @s::Item.tag.OldPosition = @@OldPosition
      @s::Item.tag.OldRotation = @@OldRotation
    }
  }
}
