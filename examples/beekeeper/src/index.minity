namespace beekeeper
?init_hives = 3
?init_sunflowers = 6
?init_poppies = 9
?init_bees = 12
?spread = 7


kill_all()
at @p summon_beekeeper()

tag ours
tag golem
tag solid
tag plant
tag summoned
tag marker
tag hive
tag sunflower
tag poppy
tag target
tag bee

macro times(?n=1) {
  var $count = 0
  repeat {
    resolve()
    $count++
  } while $count < ?n
}

macro summon_marker(?tag1,?tag2,?times=1) {
  when times(?times) then {
    summon marker{
      NoAI:true,
      Small:true,
      Invulnerable: true,
      Tags:["{.ours}","{.summoned}","{.marker}","{.{?tag1}}","{.{?tag2}}"],
    } then {
      @s::Golem = nearest @e.golem.summoned::UUID
    }
  }
}

macro summon_bee(?times) {
  when times(?times) then {
    summon bee{
      DeathLootTable: "minecraft:empty",
      Tags:["{.ours}","{.summoned}","{.bee}"],
    } then {
      @s::Golem = nearest @e.golem.summoned::UUID
    }
  }
}

function summon_beekeeper() {
  summon iron_golem{
   // NoAI: true,
    PlayerCreated: 0b,
    DeathLootTable: "minecraft:empty",
    //NoAI: true
  } then {
    tag @s golem
    tag @s ours
    summon_marker(hive,solid,?init_hives)
    summon_marker(sunflower,plant,?init_sunflowers)
    summon_marker(poppy,plant,?init_poppies)
    summon_marker(sunflower,plant,?init_sunflowers)
    summon_marker(poppy,plant,?init_poppies)

    var $count = 0
    repeat {
      $count++
      print @a {$count}
      /spreadplayers ~ ~ 1 {?spread} false {@e.marker.summoned}
      for @e.summoned.solid {
        if (down 1 #beekeeper:opaque) {
          if @s.hive {
            up 1 setblock beehive
            setblock beehive
          }
          untag @s summoned
        }
      }
      for @e.summoned.plant {
        if (down 1 tall_grass) {
          /tp @s ~ ~-1 ~
        }
        at @s if (down 1 tall_grass) {
          /tp @s ~ ~-1 ~
        }
        at @s {
          if (down 1 #dirt) {
            if @s.poppy setblock poppy 
            if @s.sunflower setblock cornflower
            untag @s summoned
          }
        }
      }
    } while @e.marker.summoned and until $count > 10
    summon_bee(?init_bees)
    /kill {@e.marker.summoned}
  }
}

function summon_target() {
  up 2 summon slime{
      DeathLootTable:"minecraft:empty",
      NoGravity:true,
      NoAI:true,
      Silent:true,
      EctiveEffects:[{
        Id:14,Amplifier:8,Duration:999999, ShowParticles:0b
      }]
    } then {
      tag @s target
      tag @s ours
      nearest @e.golem::AngryAt = @s::UUID          
      
      //effect give @s minecraft:invisibility 127 1 true
  }
}

every 10s {
  for @e.golem {
    //say next slime
    for nearest @e.target {
      @s::Invulnerable=true
      /tp ~ 12 ~
      /kill @s
    }
    
     if @e.hive[distance>4] {
       at random @e.hive[distance>4] summon_target()
     } else {
       at furthest @e.hive summon_target()
     }
  
  }
}

every 2t {
  for @e.target if @e.golem[distance<3] {
    //say die slime die
    @s::Invulnerable=true
    /tp @s ~ 12 ~
    /kill @s
  }
}

function kill_all() {

  at @e.marker setblock air
  at @e.hive up 1 setblock air
  /kill {@e.ours}
  /kill {@e.golem}
}

tag trail

function placed_head() {
  var $count = 0
  say placed head
  anchored eyes {
    
    repeat forward 0.2 {
      $count++
      summon snowball{
        NoGravity:true
      } then  {
        tag @s trail
      }
      after 2s {
        /kill {@e.trail}
      }
    } while air and while ($count<25) then {
      if (carved_pumpkin) down 1 {
        if (honey_block) and if (down 1 iron_block) and if (down 2 #beekeeper:opaque) {
          if (west 1 iron_block) and if (east 1 iron_block) {
            setblock air
            setblock (up 1) air
            setblock (down 1) air
            setblock (east 1) air
            setblock (west 1) air
            summon_beekeeper()
          } else if (south 1 iron_block) and if (north 1 iron_block) {
            setblock air
            setblock (up 1) air
            setblock (down 1) air
            setblock (north 1) air
            setblock (south 1) air
            summon_beekeeper()
          }
        }
      } else {
        say Try again
      }
    }
  }

  /advancement revoke @s only beekeeper:placed_head 
}
/advancement revoke @a only beekeeper:placed_head 

define advancements/placed_head {
  criteria: {
    placed: {
      trigger: "minecraft:placed_block",
      conditions: {
        block: "minecraft:carved_pumpkin",
      }
    }
  },
  rewards: {
    function: "beekeeper:placed_head"
  }
}