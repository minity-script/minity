namespace beekeeper
?init_hives = 4
?init_cornflowers = 12
?init_dandelions = 12
?init_alliums = 12
?init_poppies = 18
?init_bees = 2
?spread = 7


//kill_all()
//at @p summon_beekeeper()

tag ours
tag home 
tag golem
tag solid
tag plant
tag marker
tag hive
tag cornflower
tag dandelion
tag poppy
tag allium
tag target
tag bee

tag placed
tag summoned

tag watching

macro times(?n=1) {
  var $count = 0
  repeat {
    resolve()
    $count++
  } while $count < ?n
}

macro summon_marker(?tag1,?tag2,?times=1) {
  when times(?times) then {
    summon marker{
      Tags:["{.ours}","{.summoned}","{.marker}","{.{?tag1}}","{.{?tag2}}"],
    } then {
      @s::Golem = nearest @e.golem.summoned::UUID
    }
  }
}

macro summon_bee(?times) {
  when times(?times) then {
    summon bee{
      PersistenceRequired:1b,
      DeathLootTable: "minecraft:empty",
      Tags:["{.ours}","{.summoned}","{.bee}"],
    } then {
      @s::Golem = nearest @e.golem.summoned::UUID
    }
  }
}

?beeData = { EntityData: { id:"minecraft:bee",Tags:["{.ours}","{.bee}"], PersistenceRequired:1b, DeathLootTable: "minecraft:empty" } }

macro spread_solid(?tag, ?range=8, ?spread=1) {
  var $count = 0
  var $invalid = 0
  repeat {
    $count++
    $invalid = 0
    /spreadplayers ~ ~ {?spread} {?range} false {@e.summoned.?tag}
    untag @e.placed.?tag placed
    for @e.summoned.?tag {
      if (down 1 #beekeeper:opaque) {
        tag @s placed
      } else {
        $invalid++
      }
    }
  } while $invalid and until $count > 10
  untag @e.placed.?tag summoned
  unless @e.summoned.?tag {
    resolve()
  } else {
    reject()
  }
}
macro spread_plants(?tag, ?range=8, ?spread=1) {
  var $count = 0
  repeat {
    $count++
    /spreadplayers ~ ~ {?spread} {?range} false {@e.summoned.?tag}
    for @e.summoned.?tag {
      if (down 1 tall_grass) {
        /tp @s ~ ~-1 ~
      }
      if (down 1 tall_grass) {
        /tp @s ~ ~-1 ~
      }
      if (down 1 #dirt) {
        untag @s summoned
        tag @s placed
      }
    }
  } while @e.summoned.?tag and until $count > 10
  unless @e.summoned.?tag {
    resolve()
  } else {
    reject()
  }
}

macro place_home() {
  summon_marker(home,solid,1)
  when spread_solid(home,3,1) then {
    at @e.placed.home {
      setblock barrel
      up 1 setblock bell
    }
    resolve()
  } catch {
    reject()
  }
}

macro place_hives() {
  at @e.placed.home {
    summon_marker(hive,solid,?init_hives)
    when spread_solid(hive,7,5) then {
      at @e.placed.hive {
        up 2 setblock weathered_cut_copper_slab[type=bottom]
        up 1 setblock beehive{
          Bees:[?beeData,?beeData,?beeData]
        }
        setblock beehive
      }
      resolve() 
    } catch {
      reject()
    }
  }
}

macro place_plants() {
  at @e.placed.home {
    summon_marker(cornflower,plant,?init_cornflowers)
    summon_marker(poppy,plant,?init_poppies)
    summon_marker(allium,plant,?init_alliums)
    summon_marker(dandelion,plant,?init_dandelions)
    when spread_plants(plant,8,1) then {
      at @e.placed.poppy setblock poppy
      at @e.placed.cornflower setblock cornflower
      at @e.placed.dandelion setblock dandelion
      at @e.placed.allium setblock allium
      resolve() 
    } catch {
      reject()
    }
  }
}

macro place_all() {
  when place_home and when place_hives and when place_plants then {
    resolve()
  } catch {
    reject()
  }
}

function destroy_hive() {
  up 2 setblock air
  up 1 setblock air
  setblock air
}

function destroy_home() {
  up 1 setblock air
  setblock air
}

function destroy_plant() {
  up 1 setblock air
  setblock air
}

function summon_beekeeper() {
  when place_all then {
    at @e.home.placed north 1 {
    summon iron_golem{
        PersistenceRequired:1b,
        PlayerCreated:0b,
        HandItems:[
          {id:"minecraft:honeycomb",Count:1b},
          {id:"minecraft:poppy",Count:1b}
        ],
        ActiveEffects:[{Id:16,Duration:300000,Amplifier:127,Ambient:1b,ShowParticles:0b}],
        CustomName: json "Beekeper",
        //NoAI: true
      } then {
        tag @s summoned
        tag @s golem
        tag @s ours
        tag @s watching
        summon_bee(?init_bees)
        /spreadplayers ~ ~ 2 {?spread} false {@e.summoned.bee}

        untag @e.placed placed
        untag @e.summoned summoned
      }
    }
  }
}

function summon_target() {
  tag current_marker
  tag current_target
  tag current_golem

  tag @s current_marker

  unless @e.golem.watching[distance<10] {
    as nearest @e.golem!watching start_watching()
  } 
  for nearest @e.golem.watching {
    tag @s current_golem
    stop_watching()
    anchored eyes facing @e.current_marker /tp @s ~ ~ ~ ~ ~
  }
  up 2.5 summon slime{
    DeathLootTable:"minecraft:empty",
    NoGravity:true,
    NoAI:true,
    //Silent:true,
    ActiveEffects:[{
      Id:14,Amplifier:0,Duration:999999, ShowParticles:0b
    }]
  } then {
    tag @s target
    tag @s ours
    nearest @e.current_golem::AngryAt = @s::UUID 
  }
      
  untag @e.current_target current_target
  untag @e.current_golem current_golem
  untag @e.current_marker current_marker
}

function kill_target () {
  for nearest @e.target {
    @s::Invulnerable=true
    /tp ~ 12 ~
    /kill @s
  }
}

every 10s {
  for @e.golem {
    kill_target()
    if @e.solid[distance=3..10] {
      for random @e.solid[distance=3..10] summon_target()
    } else {
      for nearest @e.solid summon_target()
    }
  }
}


every 2t {
  for @e.target if @e.golem!watching[distance<3] {
    kill_target()
    as nearest @e.golem!watching start_watching()
  }
  for @e.watching {
    anchored eyes facing nearest @e.bee /tp @s ~ ~ ~ ~ ~
  }
  for @e.bee {
    if (@s::angryAt) {
      nearest @e.golem::angryAt = @s::angryAt
    }
  }
}

function kill_all() {
  at @e.solid {
    up 1 setblock air
    up 2 setblock air
  }
  at @e.marker setblock air
  
  /kill {@e.ours}
  /kill {@e.golem}
}

function start_watching() {
  //say start watching
  tag @s watching
  @s::NoAI = true
  //@s::CustomName= json "watching"  
}

function stop_watching() {
  //say stop watching
  untag @s watching
  @s::NoAI = false  
  //@s::CustomName= json "angry"  
}


function placed_head() {
  var $count = 0
  anchored eyes {
    
    repeat forward 0.2 {
      $count++
    } while air and while ($count<25) then {
      if (carved_pumpkin) down 1 {
        if (honey_block) and if (down 1 iron_block) and if (down 2 #beekeeper:opaque) {
          if (west 1 iron_block) and if (east 1 iron_block) {
            setblock air
            setblock (up 1) air
            setblock (down 1) air
            setblock (east 1) air
            setblock (west 1) air
            summon_beekeeper()
          } else if (south 1 iron_block) and if (north 1 iron_block) {
            setblock air
            setblock (up 1) air
            setblock (down 1) air
            setblock (north 1) air
            setblock (south 1) air
            summon_beekeeper()
          }
        }
      } else {
        say Nothing summoned
      }
    }
  }
  /advancement revoke @s only beekeeper:placed_head 
}

/advancement revoke @a only beekeeper:placed_head 

define advancements/placed_head {
  criteria: {
    placed: {
      trigger: "minecraft:placed_block",
      conditions: {
        block: "minecraft:carved_pumpkin",
      }
    }
  },
  rewards: {
    function: "beekeeper:placed_head"
  }
}