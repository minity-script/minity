FILE STRUCTURE
==============

└─┬─ tutorial               your mclang project
  ├─┬─ src                    keep your mclang files here
  │ └─── index.mclang         default entry point for your mclang program
  ├─┬- files                  wil be copied to your datapack on build
  │ ├─── pack.mcmeta          your pack description, as per minecraft docs
  │ └─┬─ data                 here is where json files go, as per minecraft docs
  │   ├─── tutorial         files for your main namespace
  │   ├─── ...                files for other namespaces
  │
  └─┬─ build                  the default build directory
    └─── ...  

USAGE
=====

$ mclang build [target]

Will build your datapack in the directory <target>. If you don't specify a target directory, the default build directory will be used.

$ mclang watch [target]

Will watch for changes in ./src and ./files and rebuild your datapack on every change. 
If you don't specify a target directory, the default build directory will be used.

TIPS
====

It's probably most useful, especially for watch, to have the target path point to 
<minecraft path>/saves/<your world>/datapacks/tutorial. That will allow you to:
* enable the datapack in the world with /datapack enable tutorial
* simply /reload the datapack in minecraft after every save

You can make your life easier by adding a symbolic link / shortcut in your save's datapack folder,
pointing to the default build directory. You can do this either in the file manager (don't forget to
rename the link/shortcut to tutorial), or on linux, with:

$ ln -s ./build ~/.minecraft/saves/<MyWorld>/datapacks/###pack###